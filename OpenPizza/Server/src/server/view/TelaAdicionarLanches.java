// Pacote View
package server.view;

// Importação dos pacotes e bibliotecas necessárias
import javax.swing.JOptionPane;
import server.controle.Controle;
import server.modelo.Autenticacao;
import server.modelo.Lanche;

/*
 Definição: Tela Adicionar Lanches
 */
public class TelaAdicionarLanches extends javax.swing.JFrame {

    // Atributos encapsulados
    private TelaCRUDLanches telaCRUDLanches;
    private Autenticacao autenticacao;
    private Controle controle;

    /*
     Descrição: Construtor padrão da Tela Adicionar Lanches
     Parâmetros:
     Retorno:
     */
    public TelaAdicionarLanches() {
        initComponents();
    }

    /*
     Descrição: Construtor completo da Tela Adicionar Lanches
     Parâmetros:
     telaCRUDLanches (Referência à Tela CRUD Lanches)
     autenticacao (Objeto do tipo Autenticacao contendo informações para acesso ao banco de dados)
     controle (Objeto do tipo Controle)
     Retorno:
     */
    public TelaAdicionarLanches(TelaCRUDLanches telaCRUDLanches, Autenticacao autenticacao, Controle controle) {
        this();
        this.setAutenticacao(autenticacao);
        this.setTelaCRUDLanches(telaCRUDLanches);
        this.setControle(controle);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel = new javax.swing.JPanel();
        labelDescricao = new javax.swing.JLabel();
        textDescricao = new javax.swing.JTextField();
        labelPreco = new javax.swing.JLabel();
        textPreco = new javax.swing.JTextField();
        labelIngredientes = new javax.swing.JLabel();
        textIngredientes = new javax.swing.JTextField();
        botaoCadastrar = new javax.swing.JToggleButton();
        botaoCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("OpenPizza - Novo Lanche");
        setMaximumSize(new java.awt.Dimension(270, 300));
        setMinimumSize(new java.awt.Dimension(270, 300));
        setPreferredSize(new java.awt.Dimension(270, 300));
        setResizable(false);

        painel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        painel.setMaximumSize(new java.awt.Dimension(260, 290));
        painel.setMinimumSize(new java.awt.Dimension(260, 290));

        labelDescricao.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        labelDescricao.setText("Descrição:");

        textDescricao.setFont(new java.awt.Font("Cantarell", 0, 16)); // NOI18N

        labelPreco.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        labelPreco.setText("Preço:");

        textPreco.setFont(new java.awt.Font("Cantarell", 0, 16)); // NOI18N

        labelIngredientes.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        labelIngredientes.setText("Ingredientes:");

        textIngredientes.setFont(new java.awt.Font("Cantarell", 0, 16)); // NOI18N

        botaoCadastrar.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        botaoCadastrar.setText("Cadastrar");
        botaoCadastrar.setMaximumSize(new java.awt.Dimension(120, 40));
        botaoCadastrar.setMinimumSize(new java.awt.Dimension(120, 40));
        botaoCadastrar.setPreferredSize(new java.awt.Dimension(120, 40));
        botaoCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarActionPerformed(evt);
            }
        });

        botaoCancelar.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        botaoCancelar.setText("Cancelar");
        botaoCancelar.setMaximumSize(new java.awt.Dimension(120, 40));
        botaoCancelar.setMinimumSize(new java.awt.Dimension(120, 40));
        botaoCancelar.setPreferredSize(new java.awt.Dimension(120, 40));
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelLayout = new javax.swing.GroupLayout(painel);
        painel.setLayout(painelLayout);
        painelLayout.setHorizontalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelLayout.createSequentialGroup()
                        .addComponent(labelIngredientes)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelLayout.createSequentialGroup()
                        .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textIngredientes, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(painelLayout.createSequentialGroup()
                                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelPreco)
                                    .addComponent(labelDescricao))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textDescricao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(textPreco, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(painelLayout.createSequentialGroup()
                                .addComponent(botaoCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        painelLayout.setVerticalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDescricao)
                    .addComponent(textDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPreco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelIngredientes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textIngredientes, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /*
     Descrição: Evento ao clicar no botão Cadastrar
     Parâmetros:
     Retorno:
     */
    private void botaoCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastrarActionPerformed

        // Validação dos campos informados
        boolean verificarCampos = this.getControle().verificarCamposLanche(this.textDescricao, this.textPreco);
        
        // Campos válidos -> Tentativa de inserção
        if (verificarCampos) {

            Lanche novoLanche = new Lanche(this.textDescricao.getText(), Float.parseFloat(this.textPreco.getText()), this.textIngredientes.getText());
            boolean inserirProduto = this.getControle().inserirProduto(this.getAutenticacao(), novoLanche);

            // Inserção válida -> Mensagem de aviso
            if (inserirProduto) {
                JOptionPane.showMessageDialog(null, "Produto inserido com sucesso.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                this.textDescricao.setText(null);
                this.textPreco.setText(null);
                this.textIngredientes.setText(null);

            } // Inserção inválida -> Mensagem de erro
            else {
                JOptionPane.showMessageDialog(null, "Ocorreu um erro ao tentar inserir o produto no banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } // Campos inválidos -> Mensagem de alerta
        else {
            JOptionPane.showMessageDialog(null, "Por favor, preencha os campos com valores válidos.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_botaoCadastrarActionPerformed

    /*
     Descrição: Evento ao clicar no botão Cancelar
     Parâmetros:
     Retorno:
     */
    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        // Fechar janela atual
        this.dispose();
    }//GEN-LAST:event_botaoCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarLanches.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarLanches.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarLanches.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarLanches.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAdicionarLanches().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton botaoCadastrar;
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JLabel labelDescricao;
    private javax.swing.JLabel labelIngredientes;
    private javax.swing.JLabel labelPreco;
    private javax.swing.JPanel painel;
    private javax.swing.JTextField textDescricao;
    private javax.swing.JTextField textIngredientes;
    private javax.swing.JTextField textPreco;
    // End of variables declaration//GEN-END:variables

    /*
     Descrição: Método get da telaCRUDLanches
     Parâmetros:
     Retorno:
     telaCRUDLanches (Referência à Tela CRUD Lanches)
     */
    public TelaCRUDLanches getTelaCRUDLanches() {
        return telaCRUDLanches;
    }

    /*
     Descrição: Método set da telaCRUDLanches
     Parâmetros:
     telaCRUDLanches (Referência à Tela CRUD Lanches)
     Retorno:
     */
    public void setTelaCRUDLanches(TelaCRUDLanches telaCRUDLanches) {
        this.telaCRUDLanches = telaCRUDLanches;
    }

    /*
     Descrição: Método get da autenticacao
     Parâmetros:
     Retorno:
     autenticacao (Objeto do tipo Autenticacao contendo as inforamações para acesso ao banco de dados)
     */
    public Autenticacao getAutenticacao() {
        return autenticacao;
    }

    /*
     Descrição: Método set da autenticacao
     Parâmetros:
     autenticacao (Objeto do tipo Autenticacao contendo as inforamações para acesso ao banco de dados)
     Retorno:
     */
    public void setAutenticacao(Autenticacao autenticacao) {
        this.autenticacao = autenticacao;
    }

    /*
     Descrição: Método get do controle
     Parâmetros:
     Retorno:
     controle (Objeto do tipo Controle)
     */
    public Controle getControle() {
        return controle;
    }

    /*
     Descrição: Método set do controle
     Parâmetros:
     controle (Objeto do tipo Controle)
     Retorno:
     */
    public void setControle(Controle controle) {
        this.controle = controle;
    }
}
