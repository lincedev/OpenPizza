// Pacote View
package server.view;

// Importação dos pacotes e bibliotecas necessárias
import java.io.Serializable;
import javax.swing.ImageIcon;
import javax.swing.JMenu;
import javax.swing.JOptionPane;
import server.controle.Controle;
import server.modelo.Autenticacao;
import server.persistencia.Arquivos;

/*
 Descrição: Classe de autenticação com o banco de dados
 */
public class TelaAutenticacao extends javax.swing.JFrame implements Serializable {

    // Variáveis encapsuladas
    private TelaPrincipal telaPrincipal;
    private Autenticacao autenticacao;
    private Controle controle;
    private JMenu menuExibir;
    private JMenu menuProdutos;
    private JMenu menuMesas;

    /*
     Descrição: Construtor padrão da janela de autenticação.
     Parâmetros: 
     Retorno:
     */
    private TelaAutenticacao() {
        initComponents();
    }

    /*
     Descrição: Construtor completo da janela de autenticação.
     Parâmetros: 
     *           telaPrincipal (Janela anterior)
     *           autenticacao (Necessário para acesso ao banco de dados)
     Retorno:
     */
    public TelaAutenticacao(TelaPrincipal telaPrincipal, Autenticacao autenticacao, Controle controle, JMenu menuExibir, JMenu menuProdutos, JMenu menuMesas) {
        this();
        this.setIconImage(new ImageIcon("../Imagens/pedaco_pizza.png").getImage());
        this.setTelaPrincipal(telaPrincipal);
        this.setAutenticacao(autenticacao);
        this.setControle(controle);
        this.setMenuExibir(menuExibir);
        this.setMenuProdutos(menuProdutos);
        this.setMenuMesas(menuMesas);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painel = new javax.swing.JPanel();
        labelBancoDeDados = new javax.swing.JLabel();
        labelUsuario = new javax.swing.JLabel();
        labelSenha = new javax.swing.JLabel();
        caminhoBanco = new javax.swing.JTextField();
        usuarioBanco = new javax.swing.JTextField();
        autenticarBanco = new javax.swing.JButton();
        senhaBanco = new javax.swing.JTextField();
        cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("OpenPizza - Autenticação");
        setMaximumSize(new java.awt.Dimension(350, 250));
        setMinimumSize(new java.awt.Dimension(350, 250));
        setResizable(false);

        painel.setMaximumSize(new java.awt.Dimension(350, 250));
        painel.setMinimumSize(new java.awt.Dimension(350, 250));
        painel.setPreferredSize(new java.awt.Dimension(350, 250));

        labelBancoDeDados.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        labelBancoDeDados.setText("Banco de Dados: *");

        labelUsuario.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        labelUsuario.setText("Usuário: *");

        labelSenha.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        labelSenha.setText("Senha: *");

        caminhoBanco.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        usuarioBanco.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        autenticarBanco.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        autenticarBanco.setText("Autenticar");
        autenticarBanco.setMaximumSize(new java.awt.Dimension(120, 40));
        autenticarBanco.setMinimumSize(new java.awt.Dimension(120, 40));
        autenticarBanco.setPreferredSize(new java.awt.Dimension(120, 40));
        autenticarBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autenticarBancoActionPerformed(evt);
            }
        });

        senhaBanco.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        cancelar.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.setMaximumSize(new java.awt.Dimension(120, 40));
        cancelar.setMinimumSize(new java.awt.Dimension(120, 40));
        cancelar.setPreferredSize(new java.awt.Dimension(120, 40));
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelLayout = new javax.swing.GroupLayout(painel);
        painel.setLayout(painelLayout);
        painelLayout.setHorizontalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(autenticarBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(painelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelLayout.createSequentialGroup()
                        .addComponent(labelUsuario)
                        .addGap(85, 85, 85)
                        .addComponent(usuarioBanco))
                    .addGroup(painelLayout.createSequentialGroup()
                        .addComponent(labelSenha)
                        .addGap(97, 97, 97)
                        .addComponent(senhaBanco)))
                .addContainerGap())
            .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(painelLayout.createSequentialGroup()
                            .addGap(163, 163, 163)
                            .addComponent(caminhoBanco))
                        .addGroup(painelLayout.createSequentialGroup()
                            .addComponent(labelBancoDeDados)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap()))
        );
        painelLayout.setVerticalGroup(
            painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsuario)
                    .addComponent(usuarioBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(senhaBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSenha))
                .addGap(26, 26, 26)
                .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(autenticarBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(painelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelBancoDeDados)
                        .addComponent(caminhoBanco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(207, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /*
     Descrição: Método de autenticação ao iniciar a aplicação, utilizando os parâmetros salvos no arquivo Autenticacao.txt
     Parâmetros: 
     Retorno:
     */
    private void autenticarBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autenticarBancoActionPerformed

        // Verificação dos dados informados pelo usuário
        boolean bancoVazio = this.caminhoBanco.getText().isEmpty();
        boolean usuarioVazio = this.usuarioBanco.getText().isEmpty();
        boolean senhaVazia = this.senhaBanco.getText().isEmpty();

        // Campo(s) vazio(s) -> Mensagem de alerta
        if (bancoVazio || usuarioVazio || senhaVazia) {
            JOptionPane.showMessageDialog(null, "Por favor preencha todos os campos.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        } // Campos preenchidos -> Tentativa de autenticação dos dados informados
        else {

            // Recuperação dos dados informados pelo usuário
            Autenticacao tentativaDeAutenticacao = new Autenticacao();
            tentativaDeAutenticacao.setCaminhoBanco(this.caminhoBanco.getText());
            tentativaDeAutenticacao.setUsuarioBanco(this.usuarioBanco.getText());
            tentativaDeAutenticacao.setUsuarioSenha(this.senhaBanco.getText());

            // Tentativa de verificação da conexão
            boolean verificarConexao = this.getControle().verificarConexao(tentativaDeAutenticacao);

            // Conexão válida -> Tentativa de salvamento dos dados
            if (verificarConexao) {

                // Tentativa de salvamento dos dados
                boolean salvarAutenticacao = this.getControle().salvarAutenticacao(tentativaDeAutenticacao);

                // Dados salvos -> Atualização do objeto de autenticação em tempo de execução, habilitação do botão de Pedido na Tela de Pedido e mensagem de aviso
                if (salvarAutenticacao) {
                    this.getAutenticacao().setCaminhoBanco(tentativaDeAutenticacao.getCaminhoBanco());
                    this.getAutenticacao().setUsuarioBanco(tentativaDeAutenticacao.getUsuarioBanco());
                    this.getAutenticacao().setUsuarioSenha(tentativaDeAutenticacao.getUsuarioSenha());
                    
                    JOptionPane.showMessageDialog(null, "Autenticação efetuada com sucesso.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                    
                    this.getMenuExibir().setEnabled(true);
                    this.getMenuProdutos().setEnabled(true);
                    this.getMenuMesas().setEnabled(true);
                    
                    this.dispose();
                } // Dados não salvos -> Mensagem de erro
                else {
                    JOptionPane.showMessageDialog(null, "Não foi possível salvar a autenticação.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } // Conexão inválida -> Reiniciar valores dos campos de texto e mensagem de erro
            else {
                this.caminhoBanco.setText(null);
                this.usuarioBanco.setText(null);
                this.senhaBanco.setText(null);
                JOptionPane.showMessageDialog(null, "Não foi possível autenticar a conexão com o banco de dados.\nUm ou mais dados estão incorretos.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_autenticarBancoActionPerformed

    /*
     Descrição: Método do botão Cancelar.
     Parâmetros: 
     Retorno:
     */
    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        // Retorna à janela anterior
        this.dispose();
    }//GEN-LAST:event_cancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAutenticacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAutenticacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAutenticacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAutenticacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAutenticacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton autenticarBanco;
    private javax.swing.JTextField caminhoBanco;
    private javax.swing.JButton cancelar;
    private javax.swing.JLabel labelBancoDeDados;
    private javax.swing.JLabel labelSenha;
    private javax.swing.JLabel labelUsuario;
    private javax.swing.JPanel painel;
    private javax.swing.JTextField senhaBanco;
    private javax.swing.JTextField usuarioBanco;
    // End of variables declaration//GEN-END:variables

    /*
     Descrição: Método get do componente JMenu Produtos da janela principal
     Parâmetros: 
     Retorno: JMenu barraProdutos
     */
    public JMenu getMenuProdutos() {
        return menuProdutos;
    }
    
    /*
     Descrição: Método get do componente JMenu Produtos da janela principal
     Parâmetros: JMenu Produtos da janela principal 
     Retorno: 
     */
    public void setMenuProdutos(JMenu menuProdutos) {
        this.menuProdutos = menuProdutos;
    }
    
    
    /*
     Descrição: Método get do componente JMenu Mesas da janela principal
     Parâmetros: 
     Retorno: JMenu barraMesas
     */
    public JMenu getMenuMesas() {
        return menuMesas;
    }

    
    /*
     Descrição: Método get do componente JMenu Mesas da janela principal
     Parâmetros: JMenu Mesas da janela principal
     Retorno: 
     */
    public void setMenuMesas(JMenu menuMesas) {
        this.menuMesas = menuMesas;
    }
    
    /*
     Descrição: Método get do componente JMenu Exibir da janela principal
     Parâmetros: 
     Retorno: JMenu barraExibir
     */
    public JMenu getMenuExibir() {
        return menuExibir;
    }

    
    /*
     Descrição: Método set do componente JMenu exibir da janela principal
     Parâmetros: JMenu Exibir da janela principal
     Retorno:
     * 
     */
    public void setMenuExibir(JMenu menuExibir) {
        this.menuExibir = menuExibir;
    }
    

    /*
     Descrição: Método get do atributo da janela principal
     Parâmetros: 
     Retorno:
     *           telaPrincipal (Necessário para controle dos métodos da janela anterior)
     */
    public TelaPrincipal getTelaPrincipal() {
        return telaPrincipal;
    }

    /*
     Descrição: Método set do atributo da janela principal
     Parâmetros: 
     *           telaPrincipal (Janela anterior)
     Retorno:
     */
    public void setTelaPrincipal(TelaPrincipal telaPrincipal) {
        this.telaPrincipal = telaPrincipal;
    }

    /*
     Descrição: Método get do atributo de autenticação
     Parâmetros: 
     Retorno:
     *           autenticacao (Informações de autenticação no banco de dados)
     */
    public Autenticacao getAutenticacao() {
        return autenticacao;
    }

    /*
     Descrição: Método set do atributo de autenticação
     Parâmetros: 
     *           autenticacao (Necessário para acesso ao banco de dados)
     Retorno:
     */
    public void setAutenticacao(Autenticacao autenticacao) {
        this.autenticacao = autenticacao;
    }

    /*
     Descrição: Método get do controle
     Parâmetros:
     Retorno:
     controle (Objeto do tipo Controle)
     */
    public Controle getControle() {
        return controle;
    }

    /*
     Descrição: Método set do controle
     Parâmetros:
     controle (Objeto do tipo Controle)
     Retorno:
     */
    public void setControle(Controle controle) {
        this.controle = controle;
    }
}
