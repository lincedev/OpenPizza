/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package server.view;

import java.awt.Image;
import java.sql.Connection;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import server.modelo.Autenticacao;
import server.persistencia.Banco;

/**
 *
 * @author Wellington
 */
public class TelaAdicionarPizzas extends javax.swing.JFrame {
    
    private TelaCRUDPizzas telaCrudPizzas;
    private Banco bancoDados = new Banco();
    private Connection connection;
    private Autenticacao autenticacaoServer;
    private String descricaoPizza;
    private int tamahoPizza;
    private String tamanhoPizzaFinal;
    private int quantidadeFatiasPizza;
    private int quantidadeFatiasPizzaFinal;    
    private String ingredientesPizza;
    private String precoPizza;
    private float precoPizzaFinal;              
    
    public TelaAdicionarPizzas() {
        initComponents();
    }

    public TelaAdicionarPizzas(TelaCRUDPizzas telaCrudPizzas, Autenticacao autenticacaoServer)            
    {
        this();        
        this.setAutenticacaoServer(autenticacaoServer);        
        this.setTelaCrudPizzas(telaCrudPizzas);
    }

    public TelaCRUDPizzas getTelaCrudPizzas() {
        return telaCrudPizzas;
    }

    public void setTelaCrudPizzas(TelaCRUDPizzas telaCrudPizzas) {
        this.telaCrudPizzas = telaCrudPizzas;
    }

    public Banco getBancoDados() {
        return bancoDados;
    }

    public void setBancoDados(Banco bancoDados) {
        this.bancoDados = bancoDados;
    }

    public Autenticacao getAutenticacaoServer() {
        return autenticacaoServer;
    }

    public void setAutenticacaoServer(Autenticacao autenticacaoServer) {
        this.autenticacaoServer = autenticacaoServer;
    }

    public String getDescricaoPizza() {
        return descricaoPizza;
    }

    public void setDescricaoPizza(String descricaoPizza) {
        this.descricaoPizza = descricaoPizza;
    }

    public int getTamahoPizza() {
        return tamahoPizza;
    }

    public void setTamahoPizza(int tamahoPizza) {
        this.tamahoPizza = tamahoPizza;
    }

    public int getQuantidadeFatiasPizza() {
        return quantidadeFatiasPizza;
    }

    public void setQuantidadeFatiasPizza(int quantidadeFatiasPizza) {
        this.quantidadeFatiasPizza = quantidadeFatiasPizza;
    }
            
    public String getIngredientesPizza() {
        return ingredientesPizza;
    }

    public void setIngredientesPizza(String ingredientesPizza) {
        this.ingredientesPizza = ingredientesPizza;
    }

    public String getPrecoPizza() {
        return precoPizza;
    }

    public void setPrecoPizza(String precoPizza) {
        this.precoPizza = precoPizza;
    }

    public float getPrecoPizzaFinal() {
        return precoPizzaFinal;
    }

    public void setPrecoPizzaFinal(float precoPizzaFinal) {
        this.precoPizzaFinal = precoPizzaFinal;
    }                                    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelAdicionarPizzas = new javax.swing.JPanel();
        buttonProcurarArquivo = new javax.swing.JButton();
        labelDescricaoPizza = new javax.swing.JLabel();
        textDescricaoPizza = new javax.swing.JTextField();
        labelTamanhoPizza = new javax.swing.JLabel();
        labelFatiasPizza = new javax.swing.JLabel();
        labelIngredientesPizza = new javax.swing.JLabel();
        textIngredientesPizza = new javax.swing.JTextField();
        labelImagemPizza = new javax.swing.JLabel();
        labelPrecoPizza = new javax.swing.JLabel();
        textPrecoPizza = new javax.swing.JTextField();
        buttonCadastrarPizza = new javax.swing.JButton();
        buttonCancelarCadastroPizza = new javax.swing.JButton();
        comboBoxQuantidadeFatiasPizza = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jsListaTamanhoPizza = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        painelAdicionarPizzas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro de Pizza", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        buttonProcurarArquivo.setText("Produto ...");
        buttonProcurarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonProcurarArquivoActionPerformed(evt);
            }
        });

        labelDescricaoPizza.setText("Descrição:");

        textDescricaoPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textDescricaoPizzaActionPerformed(evt);
            }
        });

        labelTamanhoPizza.setText("Tamanho:");

        labelFatiasPizza.setText("Fatias: ");

        labelIngredientesPizza.setText("Ingredientes:");

        textIngredientesPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textIngredientesPizzaActionPerformed(evt);
            }
        });

        labelImagemPizza.setText("Imagem:");

        labelPrecoPizza.setText("Preço:");

        textPrecoPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textPrecoPizzaActionPerformed(evt);
            }
        });

        buttonCadastrarPizza.setText("Cadastrar");
        buttonCadastrarPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCadastrarPizzaActionPerformed(evt);
            }
        });

        buttonCancelarCadastroPizza.setText("Cancelar");
        buttonCancelarCadastroPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarCadastroPizzaActionPerformed(evt);
            }
        });

        comboBoxQuantidadeFatiasPizza.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "4", "6", "8", "10" }));

        jsListaTamanhoPizza.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Mini", "Pequena", "Media", "Grande" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jsListaTamanhoPizza);

        javax.swing.GroupLayout painelAdicionarPizzasLayout = new javax.swing.GroupLayout(painelAdicionarPizzas);
        painelAdicionarPizzas.setLayout(painelAdicionarPizzasLayout);
        painelAdicionarPizzasLayout.setHorizontalGroup(
            painelAdicionarPizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelAdicionarPizzasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelAdicionarPizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelAdicionarPizzasLayout.createSequentialGroup()
                        .addComponent(labelIngredientesPizza)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelAdicionarPizzasLayout.createSequentialGroup()
                        .addGroup(painelAdicionarPizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelAdicionarPizzasLayout.createSequentialGroup()
                                .addComponent(labelPrecoPizza)
                                .addGap(18, 18, 18)
                                .addComponent(textPrecoPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelTamanhoPizza)
                            .addComponent(labelFatiasPizza)
                            .addGroup(painelAdicionarPizzasLayout.createSequentialGroup()
                                .addComponent(labelImagemPizza)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonProcurarArquivo)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelAdicionarPizzasLayout.createSequentialGroup()
                        .addGroup(painelAdicionarPizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(painelAdicionarPizzasLayout.createSequentialGroup()
                                .addComponent(buttonCadastrarPizza)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                                .addComponent(buttonCancelarCadastroPizza))
                            .addComponent(textIngredientesPizza, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelAdicionarPizzasLayout.createSequentialGroup()
                                .addComponent(labelDescricaoPizza)
                                .addGap(31, 31, 31)
                                .addGroup(painelAdicionarPizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(textDescricaoPizza)
                                    .addGroup(painelAdicionarPizzasLayout.createSequentialGroup()
                                        .addGroup(painelAdicionarPizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(comboBoxQuantidadeFatiasPizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(30, 30, 30))))
        );
        painelAdicionarPizzasLayout.setVerticalGroup(
            painelAdicionarPizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelAdicionarPizzasLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(painelAdicionarPizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDescricaoPizza)
                    .addComponent(textDescricaoPizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelAdicionarPizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelTamanhoPizza)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelAdicionarPizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelFatiasPizza)
                    .addComponent(comboBoxQuantidadeFatiasPizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(labelIngredientesPizza)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textIngredientesPizza, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(painelAdicionarPizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelImagemPizza)
                    .addComponent(buttonProcurarArquivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelAdicionarPizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPrecoPizza)
                    .addComponent(textPrecoPizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(painelAdicionarPizzasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCadastrarPizza)
                    .addComponent(buttonCancelarCadastroPizza))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(painelAdicionarPizzas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(painelAdicionarPizzas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
                   
    private void buttonProcurarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonProcurarArquivoActionPerformed
        try {
            //Criação do FileChooser  
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setDialogTitle("Importar imagem");
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            
            if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                //aqui voce pega o arquivo que o usuario selecionou e joga dentro de uma variavel do tipo ImageIcon
                ImageIcon icone = new ImageIcon(fileChooser.getSelectedFile().getPath());  
                //o proximo passo é redimensionar a imagem:
                ImageIcon iconeRedimensionado = new ImageIcon(icone.getImage().getScaledInstance(75, 70, Image.SCALE_DEFAULT));
                //agora voce seta o iconeRedimensionado
                //jL_foto.setIcon(iconeRedimensionado);
                
                JOptionPane.showMessageDialog(null, icone);
                JOptionPane.showMessageDialog(null, iconeRedimensionado);
                JOptionPane.showMessageDialog(null, fileChooser);
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Não foi possivel carregar a imagem.");
        }                                              
    }//GEN-LAST:event_buttonProcurarArquivoActionPerformed

    private void textDescricaoPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textDescricaoPizzaActionPerformed
        this.setDescricaoPizza(textDescricaoPizza.getText());
    }//GEN-LAST:event_textDescricaoPizzaActionPerformed

    private void textIngredientesPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textIngredientesPizzaActionPerformed
       this.setIngredientesPizza(textIngredientesPizza.getText()); 
    }//GEN-LAST:event_textIngredientesPizzaActionPerformed

    private void textPrecoPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textPrecoPizzaActionPerformed
       this.setPrecoPizza(textPrecoPizza.getText());
    }//GEN-LAST:event_textPrecoPizzaActionPerformed

    private void buttonCadastrarPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCadastrarPizzaActionPerformed
        this.setDescricaoPizza(textDescricaoPizza.getText());
        this.setTamahoPizza(jsListaTamanhoPizza.getSelectedIndex());        
        this.setQuantidadeFatiasPizza(comboBoxQuantidadeFatiasPizza.getSelectedIndex());
        this.setIngredientesPizza(textIngredientesPizza.getText());
        this.setPrecoPizza(textPrecoPizza.getText());
                                                            
        if(this.getDescricaoPizza().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor preencha o campo 'Descrição'");
        } else if(this.getIngredientesPizza().equals("")){
                    JOptionPane.showMessageDialog(null, "Preencha o campo 'Ingredientes'");
                } else if(this.getPrecoPizza().equals("")){
                            JOptionPane.showMessageDialog(null, "Por favor, preencha o campo 'Preço'");                                                                                                            
                        } else {
                            this.setPrecoPizzaFinal(Float.parseFloat(textPrecoPizza.getText()));
                            if(this.getPrecoPizzaFinal() <= 0.00){
                                JOptionPane.showMessageDialog(null, "Por favor, preencha com valores Positivos o campo 'Preço'");
                            }
                    }

        switch(this.getTamahoPizza()){
            case 0:
                this.tamanhoPizzaFinal = "Mini";
                break;
            case 1:
                this.tamanhoPizzaFinal = "Pequena";
                break;
            case 2:
                this.tamanhoPizzaFinal = "Média";                
                break;
            case 3:
                this.tamanhoPizzaFinal = "Grande";
                break;
        }
        
        switch(this.getQuantidadeFatiasPizza()){
            case 0:
                this.quantidadeFatiasPizzaFinal = 4;
                break;
            case 1:
                this.quantidadeFatiasPizzaFinal = 6;
                break;                
            case 2:
                this.quantidadeFatiasPizzaFinal = 8;
                break;
            case 3:
                this.quantidadeFatiasPizzaFinal = 10;
                break;
        }
        
        if((!(this.getDescricaoPizza().equals(""))) && (!(this.tamanhoPizzaFinal.equals(""))) && 
           (!(this.getIngredientesPizza().equals(""))) && (this.quantidadeFatiasPizzaFinal != 0) &&
           (!(this.getPrecoPizza().equals(""))) && (!(this.getPrecoPizzaFinal() <= 0.00))){
                                                
            try{                
              boolean retorno = bancoDados.inserirPizzaSemImagem(this.getAutenticacaoServer(), this.getDescricaoPizza(), this.tamanhoPizzaFinal, this.quantidadeFatiasPizzaFinal, this.getIngredientesPizza(), this.getPrecoPizzaFinal());
                if(retorno == true){
                    JOptionPane.showMessageDialog(null, "Pizza cadastrada com sucesso!!!");
                }else{
                    JOptionPane.showMessageDialog(null, "Não foi possível cadastrar a Pizza");
                }                                    
            } catch(Exception e){
                JOptionPane.showMessageDialog(null, "Não foi possível cadastrar a Pizza");
            }            
        }         
        //this.setEnabled(false);
        //this.setVisible(false);
        //this.telaCrudPizzas.setEnabled(true);
        //this.telaCrudPizzas.setVisible(true);
    }//GEN-LAST:event_buttonCadastrarPizzaActionPerformed

    private void buttonCancelarCadastroPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarCadastroPizzaActionPerformed
        this.setVisible(false);
        this.setEnabled(false);
        this.telaCrudPizzas.setVisible(true);
        this.telaCrudPizzas.setEnabled(true);
    }//GEN-LAST:event_buttonCancelarCadastroPizzaActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarPizzas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarPizzas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarPizzas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAdicionarPizzas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAdicionarPizzas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCadastrarPizza;
    private javax.swing.JButton buttonCancelarCadastroPizza;
    private javax.swing.JButton buttonProcurarArquivo;
    private javax.swing.JComboBox comboBoxQuantidadeFatiasPizza;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList jsListaTamanhoPizza;
    private javax.swing.JLabel labelDescricaoPizza;
    private javax.swing.JLabel labelFatiasPizza;
    private javax.swing.JLabel labelImagemPizza;
    private javax.swing.JLabel labelIngredientesPizza;
    private javax.swing.JLabel labelPrecoPizza;
    private javax.swing.JLabel labelTamanhoPizza;
    private javax.swing.JPanel painelAdicionarPizzas;
    private javax.swing.JTextField textDescricaoPizza;
    private javax.swing.JTextField textIngredientesPizza;
    private javax.swing.JTextField textPrecoPizza;
    // End of variables declaration//GEN-END:variables
}
